# unbind some default keybindings
unbind C-b

# set prefix key to ctrl-a
set -g prefix C-a

# pass through a ctrl-a if you press it twice
bind C-a send-prefix

# lower command delay
set -sg escape-time 1

# start first window and pane at 1, not zero
set -g base-index 1
set -g pane-base-index 1

set-option -gw xterm-keys on

# bind r to reloading the config file
bind r source-file ~/.tmux.conf \; display "Reloaded tmux config file."

# workaround for the default_path regressions
bind % split-window -h -c "#{pane_current_path}"
bind "\"" split-window -v -c "#{pane_current_path}"

# better mnemonics for splitting panes!
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# vim / xmonad style bindings for pane movement
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# xmonad-style pane navigation
bind -n C-Tab select-pane -t :.+
bind -n C-S-Tab select-pane -t :.-
bind -n M-o select-pane -t :.+
bind -n M-O select-pane -t :.-

# o for forwards, O for backwards
# iTerm2 doesn't like C-Tab etc so set that as a shortcut for C-a O
bind O select-pane -t :.-

# history limit 10000
set -g history-limit 10000

# vim / xmonad style bindings for window movement
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# shift-movement keys will resize panes
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# disable mouse support (at least while we're learning)
setw -g mode-mouse off
set -g mouse-select-pane off
set -g mouse-resize-pane off
set -g mouse-select-window off

# turn on 256 color support in tmux
set -g default-terminal "screen-256color"

# configure contents of status bar
set -g status-utf8 on
set -g status-left-length 40
set -g status-left "#[fg=green]\"#S\""

set -g status-right "#[fg=green] #h | %d %b %R"

set -g status-justify centre
setw -g monitor-activity on
set -g visual-activity on

# navigate using vim-style keys
setw -g mode-keys vi

# try turning these off and using p for previous-pane
# copy/paste using vim-style keys
bind Escape copy-mode
unbind p
bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection

# xclip support (commented as this often doesn't make sense on remote servers)
bind C-c run "tmux save-buffer - / xclip -i -sel clipboard"
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# Smart pane switching with awareness of vim splits
# see https://github.com/christoomey/vim-tmux-navigator
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# allow usual control sequences with <prefix>
# should follow smart pane switching bindings
bind C-h send-keys 'C-h'
bind C-j send-keys 'C-j'
bind C-k send-keys 'C-k'
bind C-l send-keys 'C-l'

# NOTE comment this out on non-Macs
# enable pbcopy and pbpaste
#set-option -g default-command "reattach-to-user-namespace -l zsh"

bind c neww -c "#{pane_current_path}"

# see https://raw.githubusercontent.com/seebi/tmux-colors-solarized/master/tmuxcolors-dark.conf
#source-file ~/dotfiles/tmuxcolors-dark.conf

# see https://raw.githubusercontent.com/plathrop/dotfiles/master/tmux/zenburn.conf
source-file ~/dotfiles/zenburn.conf

