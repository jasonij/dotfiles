# tmux.conf, veritable smorgasbord of copypasta
#
# TODO
#
# consider mouse mode and mouse mode settings like
# https://mkaz.com/2012/07/27/tmux-terminal-multiplexer/
#
# What about C-<tab>hjkl inside vim and M-<tab>hjkl in tmux?
# That way we'd get C-j, C-h, and C-l back.
# How to handle this on Mac OS X?
#
# Get M-S-Tab to work
# Get C-Tab to start working again too
#
# Drop the solarized colors and come up with your own
# Remove the solarized and zenburn files
#
# No. 1 thing --> display only directories not running programs in status bar!
# ^^^ THIS
#
# Consider using M-{1, 2, 3, ..., 9} for windows instead of panes
#
# Possibly C-? for pane operations, M-? for windows operations
#
# Xmonad-like defaults for tmux, e.g. M-s-n etc.
#
# Get C-4 and C-Tab and C-S-Tab to jive with vim-tmux-navigator
#
# iTerm 2 mapped C-Tab to alternate through tabs. So angry!
#
# Need way better colors and they should jive with base16


#############
# tmux basics

# unbind default prefix key (conflicts with vim)
unbind C-b

# set prefix key to ctrl-a
set -g prefix C-a

# pass through a ctrl-a if you press it twice
bind C-a send-prefix

# no command delay -- to fix problem escaping in neovim
set -g escape-time 0

# start first window and pane at 1, not zero (the keyboard is not semantic)
set -g base-index 1
set -g pane-base-index 1

# what does this actually do? I don't remember
set-option -gw xterm-keys on

# history limit 10000
set -g history-limit 10000

# turn on 256 color support in tmux
set -g default-terminal "screen-256color"

# bind r to reloading the config file
bind r source-file ~/.tmux.conf \; display "Reloaded tmux config file."


################
# copy and paste

bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection


##################
# window splitting

bind c neww -c "#{pane_current_path}"
bind -n M-c neww -c "#{pane_current_path}"

# vertical split (as per vim)
bind % split-window -h -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind -n M-v split-window -h -c "#{pane_current_path}"

# horizontal split (as per vim)
bind "\"" split-window -v -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind s
bind s split-window -v -c "#{pane_current_path}"
bind -n M-s split-window -v -c "#{pane_current_path}"

bind -n M-z resize-pane -Z

############
# navigation

# navigate using vim-style keys
setw -g mode-keys vi

# o for forwards, O for backwards
# iTerm2 doesn't like C-Tab and C-S-Tab so set shortcuts for C-a o and C-a O
# (if I recall, TODO check again)
bind O select-pane -t :.-

# TODO: why did this break on Mac?
# use C-Tab to cycle through panes
bind -n C-Tab select-pane -t :.+
bind -n C-S-Tab select-pane -t :.-

# use M-Tab to cycle through panes
bind -n M-Tab select-pane -t :.+
# why doesn't this work?
bind -n M-S-Tab select-pane -t :.-

# use M-n to select window n
# not following spacemacs pattern because panes aren't as conspicuously labelled

bind -n M-q display-panes

bind -n M-1 select-window -t :1
bind -n M-2 select-window -t :2
bind -n M-3 select-window -t :3
bind -n M-4 select-window -t :4
bind -n M-5 select-window -t :5
bind -n M-6 select-window -t :6
bind -n M-7 select-window -t :7
bind -n M-8 select-window -t :8
bind -n M-9 select-window -t :9
bind -n M-0 select-window -t :10

# use M-n and M-p for next and previous windows
bind -n M-n next-window
bind -n M-p previous-window

# Alt-hjkl for pane movement (if C-hjkl gets locally over-ridden)
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# C-A hjkl for pane movement (in case M-hjkl gets over-ridden)
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# shift-movement keys will resize panes
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10


#################
# Vim integration

# Smart pane switching with awareness of vim splits
# see https://github.com/christoomey/vim-tmux-navigator
# TODO (if posisble) fix the back behavior for C-Tab and C-S-Tab
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"


# Allow us to use C-a C-l for clear screen, etc.
bind C-h send-keys 'C-h'
bind C-j send-keys 'C-j'
bind C-k send-keys 'C-k'
bind C-l send-keys 'C-l'


############
# status bar

# configure contents of status bar
set -g status-interval 1
set -g status-justify centre
set -g status-left "#[fg=green]\"#S\""
set -g status-left-length 40
set -g status-right "#[fg=green] #h | %d %b %R"
set -g status-utf8 on


###########
# clipboard

# Linux
# bind C-c run "tmux save-buffer - / xclip -i -sel clipboard"
# bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# Mac
bind-key C-c run-shell 'tmux save-buffer - | pbcopy'
bind-key C-p run-shell 'tmux save-buffer - | pbpaste'


#######
# Color
#

# Solarized
# https://raw.githubusercontent.com/seebi/tmux-colors-solarized/master/tmuxcolors-dark.conf
source-file ~/dotfiles/tmuxcolors-solarized-light.conf

# WANT: a grey status bar and colors that go with light or dark base16 themes
# Ideally, it should only use colors 0 through 15

# TODO: status left needs to be a better color or just not exist
# Q: Could we make this jive with the base16 vim really well?
set -g status-left ''
set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-fg colour81
setw -g window-status-current-bg colour238
setw -g window-status-current-attr bold
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

setw -g window-status-fg colour138
setw -g window-status-bg colour235
setw -g window-status-attr none
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

setw -g window-status-bell-attr bold
setw -g window-status-bell-fg colour255
setw -g window-status-bell-bg colour1

# Where is that lovely blue from powerline?
set -g status-bg colour8

